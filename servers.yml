Description: >
  Ankush Dadwal / udacity-IaC
  This template deploys the servers.

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  
  WebServerImageId:
    Description: Ubuntu Server 18.04 LTS image id 
    Type: String
    Default: ami-023a7615a07affbe5
  
  BastionServerImageId:
    Description: Amazon Linux 2 AMI image id 
    Type: String
    Default: ami-01748a72bed07727c
  
  ServerInstanceType:
    Description: AWS instance type
    Type: String
    Default: t3.medium

  ServerVolumeSize:
    Description:  Web and Bastion server disk volume size
    Type: String
    Default: 10

Resources:

  UdacityS3ReadOnlyEC2:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"

  ProfileWithRolesForApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref UdacityS3ReadOnlyEC2

  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  
  # BastionServerSecGroup:
  #   Type: AWS::EC2::SecurityGroup
  #   Properties:
  #     GroupDescription: Allow SSH from local only
  #     VpcId:
  #       Fn::ImportValue:
  #         !Sub "${EnvironmentName}-VPCID"
  #     SecurityGroupIngress:
  #     - IpProtocol: tcp
  #       FromPort: 22
  #       ToPort: 22
  #       CidrIp: 0.0.0.0/0
  #     SecurityGroupEgress:
  #     - IpProtocol: tcp
  #       FromPort: 0
  #       ToPort: 65535
  #       CidrIp: 0.0.0.0/0

  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and SSH to web server
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: 22
      #   ToPort: 22
      #   CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  # Bastion Server configuration to debug any issues within web app servers
  # BastionServer:
  #   Type: AWS::EC2::Instance
  #   Properties: 
  #     SubnetId: 
  #       Fn::ImportValue: 
  #         !Sub "${EnvironmentName}-PUB1-SN"
  #     ImageId: !Ref BastionServerImageId
  #     KeyName: bastion
  #     SecurityGroupIds:
  #      - !GetAtt BastionServerSecGroup.GroupId
  #     InstanceType: !Ref ServerInstanceType
  #     BlockDeviceMappings: 
  #     - DeviceName: "/dev/sdk"
  #       Ebs: 
  #         VolumeSize: !Ref ServerVolumeSize

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
          cat > test.html <<'EOF'  
          <!DOCTYPE html>
          <html>
          <body>
            <h1>it works! Udagram, Udacity</h1>
          </body>
          </html>
          EOF
      ImageId: !Ref WebServerImageId
      IamInstanceProfile: !Ref ProfileWithRolesForApp
      # KeyName: web-server
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: !Ref ServerInstanceType
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: !Ref ServerVolumeSize

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: '4'
      MaxSize: '8'
      TargetGroupARNs:
      - Ref: WebAppTargetGroup

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
      - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
      SecurityGroups:
      - Ref: LBSecGroup

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: '80'
      Protocol: HTTP

  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"

Outputs:

  DNS:
    Description: Website URL
    Value:
      !Sub
        - 'http://${DNSName}'
        - {DNSName: !GetAtt 'WebAppLB.DNSName'}
    Export:
      Name: !Sub "${EnvironmentName}-LB-URL"

  TestURL:
    Description: Website Test URL
    Value:
      !Join
        - ''
        - - 'http://'
          - !GetAtt WebAppLB.DNSName
          - '/test.html'
    Export:
      Name: !Sub "${EnvironmentName}-TEST-URL"
